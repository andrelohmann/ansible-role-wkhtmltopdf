---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  gather_facts: false
  tasks:

  - name: APT | Install dependencies
    ansible.builtin.apt:
      name: "{{ packages }}"
      state: present
      dpkg_options: 'force-confnew,force-confdef'
      autoclean: true
      autoremove: true
      update_cache: true
      cache_valid_time: 3600
    vars:
      packages:
      - git
      - unzip
      - findutils

  - name: Fetching OpenSans font
    ansible.builtin.get_url:
      url: "https://fonts.google.com/download?family=Open%20Sans"
      dest: /tmp/Open_Sans.zip
      mode: '0644'
      force: false

  - name: Create google fonts opt directory
    ansible.builtin.file:
      path: /opt/googlefonts
      state: directory
      mode: '0644'

  - name: Unarchive OpenSans font
    ansible.builtin.unarchive:
      src: /tmp/Open_Sans.zip
      dest: /opt/googlefonts
      remote_src: true

  - name: Create google fonts target directory
    ansible.builtin.file:
      path: /usr/share/fonts/truetype/google-fonts
      state: directory
      mode: '0755'

  - name: Install google fonts
    ansible.builtin.shell: |
      set -o pipefail && find /opt/googlefonts/ -name "*.ttf" |  xargs -I{} cp {} /usr/share/fonts/truetype/google-fonts/
      chmod -R 644 /usr/share/fonts/truetype/google-fonts/*
      fc-cache -f > /dev/null
    args:
      executable: /bin/bash
      creates: /usr/share/fonts/truetype/google-fonts/*

  - name: Run fc-match OpenSans
    ansible.builtin.shell: fc-match OpenSans
    args:
      executable: /bin/bash
    register: opensans_status

  - name: dump opensans_status
    ansible.builtin.debug:
      var: opensans_status

  - name: Assert opensans_status to include OpenSans
    ansible.builtin.assert:
      that: "'OpenSans' in opensans_status.stdout"

  - name: Just get information about the repository
    ansible.builtin.git:
      repo: 'https://github.com/google/fonts.git'
      dest: /opt/googlefonts.tmp
      clone: false
      update: false
    register: git_status

  - name: dump git_status
    ansible.builtin.debug:
      var: git_status

  - name: Assert git_status to have changed
    ansible.builtin.assert:
      that: git_status.changed and not git_status.failed

  - name: Run wkhtmltopdf
    ansible.builtin.shell: wkhtmltopdf http://google.com /tmp/google.pdf
    args:
      executable: /bin/bash
      creates: /tmp/google.pdf

  - stat:
      path: '/tmp/google.pdf'
    register: pdf_document

  - name: dump pdf_document
    ansible.builtin.debug:
      var: pdf_document

  - name: Assert pdf_document is readable
    ansible.builtin.assert:
      that: pdf_document.stat.readable
...
